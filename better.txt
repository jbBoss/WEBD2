<?php
require('connect.php');
session_start();

if (!isset($_SESSION['user_id'])) {
    header("Location: ../../index.html");
    exit();
}

// Fetch current user
$user_query = "SELECT * FROM user_table WHERE user_id = :user_id";
$statement = $db->prepare($user_query);
$statement->bindParam(':user_id', $_SESSION['user_id'], PDO::PARAM_INT);
$statement->execute();
$current_user = $statement->fetch(PDO::FETCH_ASSOC);

if (!$current_user) {
    die("User not found.");
}

function add_to_watchlist($db, $movie_id, $user_id) {
    $insert_query = "INSERT INTO watchlist (movie_id, user_id) VALUES (:movie_id, :user_id)";
    $insert_statement = $db->prepare($insert_query);
    $insert_statement->bindValue(':movie_id', $movie_id, PDO::PARAM_INT);
    $insert_statement->bindValue(':user_id', $user_id, PDO::PARAM_INT);

    if ($insert_statement->execute()) {
        return "Movie added to watchlist.";
    } else {
        $error = $insert_statement->errorInfo();
        // Check for duplicate entry error code (MySQL specific)
        if ($error[1] == 1062) {
            return "Movie already in watchlist.";
        }
        return "Failed to add to watchlist.";
    }
}

function handle_movie_submission($db, $post, $current_user) {
    // Validate required fields
    if (empty($post['imdb_id']) || empty($post['movie_name'])) {
        return "IMDB ID and Movie Name are required.";
    }

    // Sanitize input
    $imdb_id = filter_var($post['imdb_id'], FILTER_SANITIZE_SPECIAL_CHARS);
    $movie_name = filter_var($post['movie_name'], FILTER_SANITIZE_SPECIAL_CHARS);
    $genre = filter_var($post['genre'] ?? '', FILTER_SANITIZE_SPECIAL_CHARS);
    $imdb_rating = filter_var($post['imbd_rating'], FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION);
    $director = filter_var($post['director'] ?? '', FILTER_SANITIZE_SPECIAL_CHARS);
    $language = filter_var($post['language'] ?? '', FILTER_SANITIZE_SPECIAL_CHARS);
    $poster = filter_var($post['poster'] ?? '', FILTER_SANITIZE_URL);
    $year = filter_var($post['movie_year'] ?? '', FILTER_SANITIZE_NUMBER_INT);
    $description = filter_var($post['movie_description'] ?? '', FILTER_SANITIZE_FULL_SPECIAL_CHARS);

    $db->beginTransaction();

    try {
        // Check if movie exists
        $stmt = $db->prepare("SELECT movie_id FROM movie_table WHERE imdb_id = ?");
        $stmt->execute([$imdb_id]);
        $movie = $stmt->fetch();

        if ($movie) {
            $message = "Movie exists. Adding to watchlist...";
            $movie_id = $movie['movie_id'];
        } else {
            // Insert new movie
            $insert_query = "INSERT INTO movie_table (movie_name, genre, imdb_rating, director, language, poster, movie_year, movie_description, imdb_id) 
                            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            $stmt = $db->prepare($insert_query);
            $stmt->execute([
                $movie_name, $genre, $imdb_rating, $director, $language, 
                $poster, $year, $description, $imdb_id
            ]);
            $movie_id = $db->lastInsertId();
            $message = "Movie added. Adding to watchlist...";
        }

        // Add to watchlist
        $watchlist_result = add_to_watchlist($db, $movie_id, $current_user['user_id']);
        $db->commit();
        return $message . " " . $watchlist_result;

    } catch (PDOException $e) {
        $db->rollBack();
        return "Error: " . $e->getMessage();
    }
}

$message = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $message = handle_movie_submission($db, $_POST, $current_user);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Submission</title>
</head>
<body>    
    <h1><?= htmlspecialchars($message) ?></h1>
</body>
</html>